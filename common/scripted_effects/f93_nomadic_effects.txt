#Effect to create a nomad Empire.
# ROOT = old country
# Last_created_country = nomadic country
f93_create_nomad_country_effect = {
	capital_scope = {
		save_global_event_target_as = homeworld
		create_country = {
			auto_delete = no
			name = ROOT
			adjective = ROOT
			type = ROOT
			name_list = ROOT
			ship_prefix = ""
			authority = ROOT
			origin = origin_nomadic_empire
			civics = root
			species = ROOT
			flag = root
			ethos = ROOT
			ignore_initial_colony_error = yes
			effect = {
				establish_communications_no_message = root
				save_global_event_target_as = homeworld_leavers
				f93_is_thenomad_effect = yes
				country_event = { id = f93_nomadic_start.3 }
				country_event = { id = game_start.8 }
				country_event = { id = game_start.9 }
				country_event = { id = game_start.60 }
				country_event = { id = game_start.70 }
				country_event = { id = game_start.72 }
				country_event = { id = country.900 days = 460 random = 60 }
			}
		}
		
	}
	destroy_country = yes
	# every_owned_fleet = {
		# 	limit = {
		# 		OR = {
		# 			is_ship_class = shipclass_starbase 
		# 			is_ship_class = shipclass_mining_station
		# 			is_ship_class = shipclass_research_station
		# 		}
		# 	}
		# 	set_owner = last_created_country
		# }
	# capital_scope = {
	# 	destroy_colony = yes
	# }
}
f93_is_thenomad_effect = {
	give_technology = { tech = tech_nomatic_society message = no }
	start_situation = { type = nomadic_recruitment_leaders target = ROOT }
	start_situation = { type = nomadic_recruitment_troops target = ROOT }
	if = { limit = { has_civic = civic_nomadic_pirate } start_situation = { type = begin_nomadic_raid_on_territory target = ROOT } }
	add_resource = {
		energy = 150
		minerals = 300
		alloys = 150
		unity = 50
	}
	if = { limit = { is_machine_empire = no }
		add_resource = {
			food = 150
		}
	}
	if = { limit = { is_machine_empire = yes }
		add_resource = {
			energy = 150
		}
	}
	create_ship_design = { design = NAME_Nomadic_shipyard }
	add_ship_design = last_created_design
	create_ship_design = { design =  NAME_Nomadic_freighter_mins }
	add_ship_design = last_created_design
	create_ship_design = { design =  NAME_Nomadic_freighter_gen	 }
	add_ship_design = last_created_design
	create_ship_design = { design =  NAME_Nomadic_freighter_aloy }
	add_ship_design = last_created_design
	create_ship_design = { design =  NAME_Nomadic_freighter_science }
	add_ship_design = last_created_design

	set_player = root
	capital_scope = {
		destroy_colony = yes
		create_country = {
			name = ROOT
			adjective = ROOT
			type = default
			name_list = ROOT
			ship_prefix = ""
			authority = ROOT
			origin = origin_default
			civics = random
			species = ROOT
			flag = random
			ethos = ROOT
			effect = {
				establish_communications_no_message = event_target:homeworld_leavers
				capital_scope = {
					while = {
						count = 28
						create_pop = {
							species = root
						}
					}
				}
							
				country_event = { id = game_start.8 }
				country_event = { id = game_start.9 }
				country_event = { id = game_start.60 }
				country_event = { id = game_start.70 }
				country_event = { id = game_start.72 }
			}
		}
	}
	
}
f93_save_rescources_effect = {
	export_resource_stockpile_to_variable = { resource = energy variable = stockpile_energy }
	export_resource_stockpile_to_variable = { resource = minerals variable = stockpile_minerals }
	export_resource_stockpile_to_variable = { resource = food variable = stockpile_food }
	export_resource_stockpile_to_variable = { resource = alloys variable = stockpile_alloys }
	export_resource_stockpile_to_variable = { resource = consumer_goods variable = stockpile_consumer_goods }
	export_resource_stockpile_to_variable = { resource = influence variable = stockpile_consumer_influence }
	export_resource_stockpile_to_variable = { resource = exotic_gases variable = stockpile_exotic_gases }
	export_resource_stockpile_to_variable = { resource = rare_crystals variable = stockpile_rare_crystals }
	export_resource_stockpile_to_variable = { resource = volatile_motes variable = stockpile_volatile_motes }
	export_resource_stockpile_to_variable = { resource = sr_zro variable = stockpile_sr_zro }
	export_resource_stockpile_to_variable = { resource = sr_dark_matter variable = stockpile_sr_dark_matter }
	export_resource_stockpile_to_variable = { resource = sr_living_metal variable = stockpile_sr_living_metal }
	export_resource_stockpile_to_variable = { resource = unity variable = stockpile_unity }
	export_resource_stockpile_to_variable = { resource = physics_research variable = stockpile_physics_research }
	export_resource_stockpile_to_variable = { resource = society_research variable = stockpile_society_research }
	export_resource_stockpile_to_variable = { resource = engineering_research variable = stockpile_engineering_research }
}
f93_transfer_stockpile_data_effect = {
	set_variable = { which = stockpile_energy value = root.stockpile_energy }
	set_variable = { which = stockpile_minerals value = root.stockpile_minerals }
	set_variable = { which = stockpile_food value = root.stockpile_food }
	set_variable = { which = stockpile_alloys value = root.stockpile_alloys }
	set_variable = { which = stockpile_consumer_goods value = root.stockpile_consumer_goods }
	set_variable = { which = stockpile_influence value = root.stockpile_consumer_influence }
	set_variable = { which = stockpile_exotic_gases value = root.stockpile_exotic_gases }
	set_variable = { which = stockpile_rare_crystals value = root.stockpile_rare_crystals }
	set_variable = { which = stockpile_volatile_motes value = root.stockpile_volatile_motes }
	set_variable = { which = stockpile_sr_zro value = root.stockpile_sr_zro }
	set_variable = { which = stockpile_sr_dark_matter value = root.stockpile_sr_dark_matter }
	set_variable = { which = stockpile_sr_living_metal value = root.stockpile_sr_living_metal }
	set_variable = { which = stockpile_unity value = root.stockpile_unity }
	set_variable = { which = stockpile_physics_research value = root.stockpile_physics_research }
	set_variable = { which = stockpile_society_research value = root.stockpile_society_research }
	set_variable = { which = stockpile_engineering_research value = root.stockpile_engineering_research }
}
f93_reinstate_rescources_effect = {
	add_resource = {
		energy = 1
		mult = stockpile_energy
	}
	add_resource = {
		minerals = 1
		mult = stockpile_minerals
	}
	add_resource = {
		food = 1
		mult = stockpile_food
	}
	add_resource = {
		alloys = 1
		mult = stockpile_alloys
	}
	add_resource = {
		consumer_goods = 1
		mult = stockpile_consumer_goods
	}
	add_resource = {
		influence = 1
		mult = stockpile_consumer_influence
	}
	add_resource = {
		exotic_gases = 1
		mult = stockpile_exotic_gases
	}
	add_resource = {
		rare_crystals = 1
		mult = stockpile_rare_crystals
	}
	add_resource = {
		volatile_motes = 1
		mult = stockpile_volatile_motes
	}
	add_resource = {
		sr_zro = 1
		mult = stockpile_sr_zro
	}
	add_resource = {
		sr_dark_matter = 1
		mult = stockpile_sr_dark_matter
	}
	add_resource = {
		sr_living_metal = 1
		mult = stockpile_sr_living_metal
	}
	add_resource = {
		unity = 1
		mult = stockpile_unity
	}
	add_resource = {
		physics_research = 1
		mult = stockpile_physics_research
	}
	add_resource = {
		society_research = 1
		mult = stockpile_society_research
	}
	add_resource = {
		engineering_research = 1
		mult = stockpile_engineering_research
	}
}

f93_pays_reparation_effect = {
	if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly1 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly1
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly3 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly3
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly4 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly4
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly5 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly5
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly6 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly6
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly7 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly7
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly8 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly8
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly9 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly9
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_payout_monthly10 } }
		add_modifier = {
			modifier = MOD_energy_payout_monthly10
			days = 3600
		}
	}
}

f93_gets_reparation_effect = {
	if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly1 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly1
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly3 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly3
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly4 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly4
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly5 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly5
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly6 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly6
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly7 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly7
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly8 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly8
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly9 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly9
			days = 3600
		}
	}
	else_if = {
		limit = { NOT = { has_modifier = MOD_energy_receive_monthly10 } }
		add_modifier = {
			modifier = MOD_energy_receive_monthly10
			days = 3600
		}
	}
}

on_game_start_country = {
	events = {
		f93_nomadic_start.1
		f93_nomadic_start.2
		f93_steppe_nomad.99
	}
}


# this = country
on_yearly_pulse_country = {
	events = {
		f93_nomadic_start.4
		nomadic_ascension.3
		f93_nomadic_raid.10
		f93_nomadic_start.14
		f93_nomadic_start.15
		nomadic_ascension.5
		nomadic_ascension.7
	}
}

# this = country
on_monthly_pulse_country = {
	events = {
		f93_nomadic_deficit.1
		f93_steppe_nomad.12
	}
}
# This = starbase being disabled (not ship!)
# From = fleet that disabled the starbase
on_starbase_disabled = {
	events = {
		# f93_nomadic_raid.4 
	}
}

# Pop is abducted by raiding stance
# This = Pop scope
# From = planet abducted from
on_pop_abducted = {
	events = {
		# f93_nomadic_raid.5
	}
}


# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
	}
}


# Executed right after country has established communications with another country. Does fire if comms are established with establish_communications_no_message
# This = Country which established the communications
# From = Country which communications were established with
on_post_communications_established_always_fire = {
	events = {
		f93_nomadic_start.4
	}
}


# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		f93_nomadic_raid.2
		f93_nomadic_raid.8
		# f93_steppe_nomad.5
	}
}


# Executed just as country is changing its government, after the new one is applied
# THIS = country
on_post_government_changed = {
	events = {
		f93_nomadic_start.6
	}
}


# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		f93_nomadic_raid.4
	}
	
}


# The game will generate one on_building_X on_action for every station ship-size
# Orbital stations will get the planet in FROM, space stations only get they building ship

# This = construction ship
# From = planet OR Astral Rift it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_mining_station = {
	events = {
		f93_steppe_nomad.1 #<- strong version
		f93_steppe_nomad.6 #<- light version
	}
}

# This = construction ship
# From = planet OR Astral Rift it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_research_station = {
	events = {
		f93_steppe_nomad.1 #<- strong version
		f93_steppe_nomad.6 #<- light version
	}
}


# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		# f93_steppe_nomad.4
	}
}


# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
on_system_lost = {
	events = {
		f93_steppe_nomad.8
	}
}

# From = system
# FromFrom = country (previous owner)
# This = country (new owner)
on_system_gained = {
	events = {
		f93_steppe_nomad.9
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		f93_steppe_nomad.11
	}
}

# See also: on_fleet_auto_move_arrival
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		f93_steppe_nomad.14
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		f93_nomadic_raid.9
	}
}


# This = Country
on_relic_received = {
	events = {
		nomadic_ascension.4
		nomadic_ascension.3
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		nomadic_ascension.6
	}
	random_events = {
	}
}


# Triggers when ground combat starts
# This = planet
# From = country attacking
on_ground_combat_started = {
	events = {
		f93_nomadic_raid.12
	}
}